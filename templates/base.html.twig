<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>{% block title %}BAYWORX EMS{% endblock %}</title>
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>ðŸ“…</text></svg>">
        
        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
        <!-- Font Awesome CSS -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
        
        {% block stylesheets %}
        <style>
            .navbar-brand {
                font-weight: bold;
            }
            .footer {
                background-color: #f8f9fa;
                border-top: 1px solid #dee2e6;
            }
            .alert {
                border-radius: 0.375rem;
            }
            
            /* Fix dropdown positioning */
            .navbar-nav .dropdown-menu {
                position: absolute;
                z-index: 1050;
                transform: translate3d(0px, 0px, 0px) !important;
            }
            
            /* Ensure dropdowns are properly positioned */
            .dropdown {
                position: relative;
            }
            
            /* Fix any potential overflow issues */
            .navbar-collapse {
                position: static;
            }
            
            /* Force proper positioning for all Bootstrap dropdowns */
            .dropdown-menu {
                position: absolute !important;
                top: 100% !important;
                left: 0 !important;
                z-index: 1050 !important;
                transform: none !important;
                min-width: 160px;
                padding: 0.5rem 0;
                margin: 0.125rem 0 0;
                border: 1px solid rgba(0,0,0,.15);
                border-radius: 0.375rem;
                box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.175);
            }
            
            /* Right-aligned dropdowns */
            .dropdown-menu-end {
                right: 0 !important;
                left: auto !important;
            }
            
            /* Ensure dropdown menus don't get cut off */
            .btn-group .dropdown-menu {
                position: absolute !important;
            }
            
            /* Fix dropdowns in table responsive containers */
            .table-responsive .dropdown-menu {
                position: fixed !important;
                z-index: 1051 !important;
            }
            
            /* Ensure dropdown toggles work properly */
            .dropdown-toggle::after {
                display: inline-block;
                margin-left: 0.255em;
                vertical-align: 0.255em;
                content: "";
                border-top: 0.3em solid;
                border-right: 0.3em solid transparent;
                border-bottom: 0;
                border-left: 0.3em solid transparent;
            }
            
            /* Fix dropdown items */
            .dropdown-item {
                display: block;
                width: 100%;
                padding: 0.375rem 1rem;
                clear: both;
                font-weight: 400;
                color: #212529;
                text-align: inherit;
                text-decoration: none;
                white-space: nowrap;
                background-color: transparent;
                border: 0;
            }
            
            .dropdown-item:hover,
            .dropdown-item:focus {
                color: #1e2125;
                background-color: #e9ecef;
            }
            
            /* Prevent dropdowns from being cut off by parent containers */
            /* Only apply overflow visible to card bodies that contain dropdown buttons */
            .card-body .dropdown,
            .card-body .btn-group {
                position: relative;
            }
            
            .card-body .dropdown .dropdown-menu,
            .card-body .btn-group .dropdown-menu {
                position: absolute !important;
                z-index: 1051 !important;
            }
            
            .table-responsive {
                overflow: visible !important;
            }
            
            /* Ensure form select elements work properly */
            .form-select {
                background-color: #fff;
                background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m1 6 7 7 7-7'/%3e%3c/svg%3e");
                background-repeat: no-repeat;
                background-position: right 0.75rem center;
                background-size: 16px 12px;
                border: 1px solid #ced4da;
                border-radius: 0.375rem;
                cursor: pointer;
            }
            
            .form-select:focus {
                border-color: #86b7fe;
                outline: 0;
                box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
            }
            
            /* Prevent our dropdown fixes from interfering with form selects */
            select.form-select {
                position: relative !important;
                z-index: auto !important;
                transform: none !important;
            }
            
            /* Ensure form controls work properly in card bodies */
            .card-body .form-select,
            .card-body .form-control {
                position: relative;
                z-index: 1;
            }
            
            /* Only apply horizontal scroll when actually needed */
            .table-responsive.needs-scroll {
                overflow-x: auto;
                overflow-y: visible;
            }
            
            /* Ensure dropdown button groups work */
            .btn-group .dropdown-menu {
                position: absolute !important;
                top: 100% !important;
                left: 0 !important;
            }
            
            .btn-group .dropdown-menu-end {
                right: 0 !important;
                left: auto !important;
            }
        </style>
        {% endblock %}
    </head>
    <body class="d-flex flex-column min-vh-100">
        <!-- Navigation -->
        {% block navbar %}
        <nav class="navbar navbar-expand-lg navbar-dark bg-secondary">
            <div class="container">
                <a class="navbar-brand" href="{{ path('homepage') }}">ðŸ“… {{ company_config().name }}</a>
                
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path('events_list') }}">Events</a>
                        </li>
                    </ul>
                    
                    <ul class="navbar-nav">
                        {% if app.user %}
                            {% if is_granted('ROLE_ADMIN') %}
                                <li class="nav-item">
                                    <a class="nav-link" href="{{ path('admin_dashboard') }}">Admin Dashboard</a>
                                </li>
                            {% endif %}
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    {{ app.user.name ? app.user.name : app.user.email }}
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    {% if is_granted('ROLE_ATTENDEE') %}
                                        <li><a class="dropdown-item" href="{{ path('attendee_dashboard') }}">Dashboard</a></li>
                                        <li><a class="dropdown-item" href="{{ path('attendee_message_index') }}">
                                            <i class="bi bi-envelope"></i> Messages
                                        </a></li>
                                    {% endif %}
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item" href="{{ path('app_logout') }}">Logout</a></li>
                                </ul>
                            </li>
                        {% else %}
                            <li class="nav-item">
                                <a class="nav-link" href="{{ path('app_login') }}">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="{{ path('admin_login') }}">Admin Login</a>
                            </li>
                        {% endif %}
                    </ul>
                </div>
            </div>
        </nav>
        {% endblock %}

        <!-- Flash Messages -->
        {% for type, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ type == 'error' ? 'danger' : (type == 'info' ? 'info' : type) }} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            {% endfor %}
        {% endfor %}

        <!-- Main Content -->
        <main class="flex-grow-1">
            {% block body %}{% endblock %}
        </main>

        <!-- Footer -->
        <footer class="footer mt-auto py-3">
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <span class="text-muted">&copy; {{ 'now'|date('Y') }} BAYWORX EMS</span>
                    </div>
                    <div class="col-md-6 text-md-end">
                        <span class="text-muted">v1.02</span>
                    </div>
                </div>
            </div>
        </footer>

        <!-- Bootstrap JS -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        
        <!-- Fix dropdown positioning -->
        <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Bootstrap dropdowns
            const dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'));
            const dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
                return new bootstrap.Dropdown(dropdownToggleEl);
            });
            
            // Ensure all dropdowns are properly positioned
            const dropdowns = document.querySelectorAll('.dropdown-toggle');
            dropdowns.forEach(function(dropdown) {
                dropdown.addEventListener('show.bs.dropdown', function(event) {
                    const menu = this.nextElementSibling;
                    if (menu && menu.classList.contains('dropdown-menu')) {
                        // Force positioning update
                        setTimeout(function() {
                            menu.style.position = 'absolute';
                            menu.style.transform = 'none';
                            menu.style.zIndex = '1051';
                            
                            // Check if we're in a table-responsive container
                            const tableResponsive = menu.closest('.table-responsive');
                            if (tableResponsive) {
                                menu.style.position = 'fixed';
                                
                                // Calculate position relative to viewport
                                const rect = dropdown.getBoundingClientRect();
                                menu.style.top = (rect.bottom + window.scrollY) + 'px';
                                menu.style.left = (rect.left + window.scrollX) + 'px';
                                menu.style.right = 'auto';
                                
                                // Handle right-aligned dropdowns
                                if (menu.classList.contains('dropdown-menu-end')) {
                                    menu.style.left = 'auto';
                                    menu.style.right = (window.innerWidth - rect.right - window.scrollX) + 'px';
                                }
                            }
                        }, 1);
                    }
                });
                
                // Hide dropdown when clicking outside
                dropdown.addEventListener('hide.bs.dropdown', function(event) {
                    const menu = this.nextElementSibling;
                    if (menu && menu.classList.contains('dropdown-menu')) {
                        // Reset styles
                        menu.style.position = '';
                        menu.style.top = '';
                        menu.style.left = '';
                        menu.style.right = '';
                        menu.style.zIndex = '';
                    }
                });
            });
            
            // Handle window resize
            window.addEventListener('resize', function() {
                // Close all open dropdowns on resize
                document.querySelectorAll('.dropdown-menu.show').forEach(function(menu) {
                    menu.classList.remove('show');
                    const toggle = menu.previousElementSibling;
                    if (toggle && toggle.classList.contains('dropdown-toggle')) {
                        toggle.setAttribute('aria-expanded', 'false');
                    }
                });
                
                // Re-check table responsive containers
                checkTableResponsive();
            });
            
            // Function to check if table-responsive containers need scrolling
            function checkTableResponsive() {
                document.querySelectorAll('.table-responsive').forEach(function(container) {
                    const table = container.querySelector('table');
                    if (table) {
                        if (table.offsetWidth > container.clientWidth) {
                            container.classList.add('needs-scroll');
                        } else {
                            container.classList.remove('needs-scroll');
                        }
                    }
                });
            }
            
            // Check on page load
            checkTableResponsive();
        });
        </script>
        
        {% block javascripts %}
        {% endblock %}
    </body>
</html>
